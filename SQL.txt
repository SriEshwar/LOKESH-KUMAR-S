
LOKESH KUMAR S
SRI ESHWAR COLLEGE OF ENGINEERING
SQL PRACTICE QUERIES – ASPIRE SYSTEM TRAINING.





create database coe;
use coe;

create table  programer(
 name varchar(8) not null,
 dob  date not null,
 doj date not null,
 sex varchar(1)not null,
 prof1 varchar(8),
 prof2 varchar(8),
 salary int
 );
 
 insert into programer values("somdutt",'2002-05-23','2023-05-03','M','pascal','basic',10000),
 ("LOKESH",'2002-05-23','2023-05-03','M','pascal','basic',10000),
 ("KISHORE",'2002-06-23','2023-06-03','F','pascal','basic',12000),
 ("HARIN",'2001-05-23','2022-05-03','M','pascal','basic',13000),
 ("SRINI",'2002-09-23','2022-05-23','M','pascal','basic',14000),
 ("DHIVAR",'2007-05-13','2023-11-11','F','pascal','basic',15000);
  
 create table software(
 name varchar(8) not null,
 title varchar(8) not null,
 dev_in varchar(8) not null,
 scost decimal(7,2),
 dcost int,
 sold int );
 
 insert into software values("somdut","parachu","basic",399.95,6000,43),
 ("LOKESH","juice","angular",390.95,7100,48),
 ("KISHORE","shoe","html",399.95,6700,53),
 ("HARIN","web ","css",378.95,6100,46),
 ("SATHISH","amazon","js",329.95,6200,44),
 ("SRINI","servive","ts",400.95,6300,49),
 ("DHIVAR","medical","sql",401.95,6400,51);
  
  create table studies(
  name varchar(8) not null,
  splace varchar(9) not null,
  course varchar(5) not null,
  ccost varchar(5) not null);
  
  insert into studies values
  ("LOKESH","udt","ece",200),
  ("KISHORE","ckp","cse",200),
  ("HARIN","cbe","eee",200),
  ("SRINI","pollachi","mech",200),
  ("DHIVAR","chennai","civil",200);
   
   -- query ----------------------------------------------------------------------------------
   
-- 1) Find out the SELLING COST AVERAGE for the packages developed in PASCAL?
   select avg(scost) as selling_cost
   from software 
   where dev_in = "pascal";
   
-- 2) Display the names and ages of all programmers.
  select name, timestampdiff(year,dob,curdate()) as age from programer;
 
-- 3) Display the names and ages of all the programmers who have undergone training in DCS course.
 
 select p.name, timestampdiff(year,dob,curdate()) as age 
 from programer p join studies s
 on p.name = s.name 
 where course = "dcs";

-- 4) What is the highest numbers of copies sold by a package?

select max(sold) from software;

-- 5) Display the names and date of birth of all the programmer born in JANUARY.

select name , dob  from programer  where month(dob)  =5;

-- 6) Display lowest course fee.

 select min(scost) from software;
 
-- 7) How many programmer has done PGDCA course.

 select count(*) from programer p
 join studies s on 
 s.name =p.name
 where course = "ece";
 
-- 8) How much revenue has been earned through sales of packages in C

select sum(scost * sold) as revenue
 from software
 where dev_in = "html";
 
 -- 9) Display the details of software developed by Ramesh?
 
  select title from software
  where name ="nivas";
  
-- 10) How many programmers studied at SABHARI.
   
   select count(name) from studies
   where splace = "udt";
   
-- 11) Display the details of PACKAGES whose sales crossed the 20000 mark.

select * from software
where sold > 45;

-- 12) Find out the number of copies which should be sold in order to recover 
-- the development cost ofeach package.

select round(dcost / scost) from software 
where scost*sold<dcost;

-- 13) What is the price of the costliest software developed in BASIC?

select max(scost) as costliest from software;

-- 14) Display the details of packages for which development cost has been recovered.

 select * from software where dcost < scost;

-- 15) How many packages were developed in dbase?

 select count(name) from software
 where dev_in ="css";

-- 16) How many programmers studies at paragathi?
select * from studies 
where splace ="udt";
-- 17) How many programmers paid 5000 to 10000 for their course?

select count(*) from studies
where ccost between 50000 and 10000; 

-- 18) What is the average course fee?

select avg(ccost) from studies;

-- 19) Display the details of programmers knowing c?
 
 select * from programer
 where prof1 = 'pascal' or prof2 = 'pascal';


-- 20) How many programmers know either Cobol or Pascal?
 
 select * from programer
 where prof1 in ("pascal","cobol") or prof2 in ("pascal","cobol");
 

-- 21) How many programmers don't know Pascal & C?
 select * from programer 
 where prof1 not in ("pascal","cobol") and prof2 not in ("pascal","cobol");


-- 22) How old is the oldest male programmers?

select max(timestampdiff(year,dob,curdate())) from programer
where sex ="M";

-- 23) What is the average age of female programmers?

select avg(timestampdiff(year,dob,curdate())) from programer
where sex = "F";

-- 24) Calculate the experience in years for each programmers and display along with the names in
 -- descending order?
 
 select timestampdiff(year,doj,curdate()) as experience from programer order by experience desc;
 
 
-- 25) Who are the programmers who celebrate their birthday during the current month?

select name from programer
 where timestampdiff(month,dob,curdate()) =0 ;
 
-- 26) How many female programmers are there?

select count(name) from programer
where sex = "F";

-- 27) What are the languages known by the male programmers?
select  distinct prof1 , prof2 from programer
where sex = "M";

-- 28) What is the Average salary?

select avg(salary) from programer;

-- 29) How many people draw 2000 to 4000?

select count(name) from programer
where salary between 10000 and 12000;


-- 30) Display the details of those who don't know Clipper, Cobol or Pascal?

select * from programer
where prof1 not in ("clipper","cobol","pascal") or prof2 not in ("clipper","cobol","pascal");

-- 31) How many Female programmers knowing C are above 24 years of age?

select name from programer 
where sex= "F" and ( prof1='c' or prof2 = 'c') and timestampdiff(year,dob,curdate()) > 24;


-- 32) Who are the programmers who will be celebrating their Birthday within a week?

select * from programer 
where timestampdiff(week,dob,curdate())=0;

-- 33 Display the details of those with less than a year's experience?

select * from programer
where timestampdiff(year,doj,curdate())<0;

-- 34 Display the details of those who will be completing 2 years of service this year?

select * from programer 
where timestampdiff(year,doj,curdate()) >=2;

-- 35 Calculate the amount to be recovered for those packages whose development cost has not been
-- recovered?
    
    select (dcost - (scost*sold)) as dev, title from software where (scost*sold)<dcost;

-- 36) List the packages which have not been sold so far?

select * from software
where sold= 0;
-- 37) Find out the cost of the software developed by Mary?

select scost from software
 where name = "nivas";

-- 38) Display the institute’s names from the studies table without duplicates?

 select  distinct splace from studies;
 
-- 39) How many different courses are mentioned in the studies table?

select distinct course from studies;

-- 40) Display the names of the programmers whose names contain 2 occurrences of the letter A?
 select name from programer
 where name like "n%n%" or name like "%n%n" or name like "n%%n" or name like "%nn%";
 
-- 41) Display the names of programmers whose names contain unto 5 characters?

 select name from programer
 where length(name)=5;
 
-- 42) How many female programmers knowing COBOL have more than 2 years experience?
 select name from programer 
 where sex ="F" and (prof1="cobol" or prof2 = "cobol") and timestampdiff(year,doj,curdate())<2;

-- 43) What is the length of the shortest name in the programmer table?

select min(length(name)) from programer;

-- 44) What is the average development cost of a package developed in COBOL?

select avg(dcost) from software
where dev_in= "cobol";

-- 45) Display the name, sex, dob (DD/MM/YY format), doj for all the programmers without using
-- conversion function?
  select name,sex,date_format(dob, '%d/%m/%y') as date ,doj 
  from programer;

-- 46) Who are the programmers who were born on the last day of the month?

select name from programer
where day(dob) = day(last_day(dob));

-- 47) What is the amount paid in salaries of the male programmers who do not know Cobol?

select sum(salary) from programer
where sex='M' and prof1 <> "cobol" and prof2 <> "cobol";

-- 48) Display the title, scost, dcost and difference between scost and dcost in descending order of difference?

   select title ,scost ,dcost , scost-dcost as cost_diff  from software
   order by cost_diff desc;
   
-- 49) Display the name, dob, doj of those month of birth and month of joining are same?

 select name ,dob,doj from programer
 where month(dob)  = month (doj);
 
-- 50) Display the names of the packages whose names contain more than 1 word?

select title from  software
where name like "% %";

--    QUERIES - II  ----------------------------------------------------------------------------------------------------------------------------------------------------------
-- 1) Display THE NUMBER OF packages developed in EACH language.

select dev_in as language ,count(title) as count 
from software
group by dev_in; 
-- 2) Display THE NUMBER OF packages developed by EACH person.

select name ,count(title) from software
group by name;

-- 3) Display THE NUMBER OF male and female programmer.

select sex,count(sex) as count
from programer
group by sex;

-- 4) Display THE COSTLIEST packages and HIGEST selling developed in EACH language.

select dev_in as language ,max(scost), max(sold)
from software
group by dev_in;

-- 5) Display THE NUMBER OF people BORN in EACH YEAR

select  year(dob) , count(name)
 from programer 
 group by year(dob);
 
-- 6) Display THE NUMBER OF people JOINED in EACH YEAR.

select year(doj) as joining_year,count(name)
from programer
group by year(doj);


-- 7) Display THE NUMBER OF people BORN in EACH MONTH.

select month (dob) ,count(name) 
from programer
group by month (dob);

-- 8) Display THE NUMBER OF people JOINED in EACH MONTH.

select month (doj) ,count(name) 
from programer
group by month (doj);

-- 9) Display the language wise COUNTS of prof1.

select prof1 , count(prof1)
from programer
group by prof1;

-- 10) Display the language wise COUNTS of prof2.

select prof2 , count(prof2)
from programer
group by prof2;

-- 11) Display THE NUMBER OF people in EACH salary group.

select salary , count(name) 
from programer
group by salary;


-- 12) Display THE NUMBER OF people who studied in EACH institute.

select splace ,count(name)
from studies
group by splace;


-- 13) Display THE NUMBER OF people who studied in EACH course.

select course , count(name)
from studies
group by course;  

-- 14) Display the TOTAL development COST of the packages developed in EACH language.

select dev_in as language ,sum(dcost)
from software
group by dev_in;

-- 15) Display the selling cost of the package developed in EACH language.

select dev_in , sum(scost) as selling_cost
from software
group by dev_in;

-- 16) Display the cost of the package developed by EACH programmer.

select name , sum(scost) as selling_cost
from software
group by name;

-- 17) Display the sales values of the package developed in EACH programmer.

select name , sum(sold) as sales_value
from software
group by name ;


-- 18) Display the NUMBER of packages developed by EACH programmer.

select name , count(title) 
from software
group by name;

-- 19) Display the sales COST of packages developed by EACH programmer language wise.

select dev_in , sum(scost*sold)
from software
group by dev_in;
 
-- 20) Display EACH programmers name, costliest package and cheapest packages developed by him/her

 select name , max(scost) , min(scost)
 from software
 group by name;

-- 21) Display EACH language name with AVERAGE development cost, AVERAGE cost, selling cost and AVERAGE price per copy.

select dev_in , avg(dcost) , avg(scost) , scost , avg(scost/sold)
from software
group by dev_in;

-- 22) Display EACH institute name with NUMBER of courses, AVERAGE cost per course.

select name , count(course), avg(ccost/course) as avg_cost_percourse
from studies
group  by name;


-- 23) Display EACH institute name with NUMBER of students.

select splace, count(name) as numbr_of_std
from studies
group by splace;

-- 24) Display names of male and female programmers.

select name , sex
from programer
order by sex;

-- 25) Display the programmer's name and their packages.

select name , title 
from software;

-- 26) Display the NUMBER of packages in EACH language.

select dev_in , count(title)
from software
group by dev_in;

-- 27) Display the NUMBER of packages in EACH language for which development cost is less than 1000.

select dev_in , count(title) 
from software
where scost <1000
group by dev_in;


--  28) Display the AVERAGE difference BETWEEN scost and dcost for EACH language.

select dev_in ,avg(scost-dcost)
from software
group by dev_in;

-- 29) Display the TOTAL scost, dcsot and amount TOBE recovered for EACH programmer for
-- whose dcost HAS NOT YET BEEN recovered.

select name ,sum(scost) , sum(dcost) , sum(scost)-sum(dcost)
from software
group by name
having sum(scost) < sum(dcost);

-- 30) Display highest, lowest and average salaries for THOSE earning MORE than 2000.

select  max(salary), min(salary), avg(salary)
from programer
where salary > 2000;

-- QUERIES - III  -------------------------------------------------------------------------------------------------------------------------------------------------------
-- 1) Who is the highest paid C programmer?

  select name 
  from programer 
  where prof1="c" or prof2 ="c"
  order by salary desc
  limit 1;
  
-- 2) Who is the highest paid female cobol programmer?
 
 select name 
 from programer 
 where sex="F" and (prof1="cocol" or prof2 = "cobol")
 order by salary desc limit 1;

3) Display the name of the HIGHEST paid programmer for EACH language (prof1)
SELECT DISTINCT ON (prof1) name
FROM Programmer
ORDER BY prof1, salary DESC;
4) Who is the LEAST experienced programmer?
SELECT name
FROM Programmer

ORDER BY doj
LIMIT 1;
5) Who is the MOST experienced programmer?
SELECT name
FROM Programmer
ORDER BY doj DESC
LIMIT 1;
6) Which language is known by ONLY ONE programmer?
SELECT prof1 AS Language
FROM Programmer
GROUP BY prof1
HAVING COUNT(*) = 1
UNION
SELECT prof2 AS Language
FROM Programmer
GROUP BY prof2
HAVING COUNT(*) = 1;
7) Who is the YOUNGEST programmer knowing DBASE?
SELECT name
FROM Programmer
WHERE prof1 = &#39;DBASE&#39; OR prof2 = &#39;DBASE&#39;
ORDER BY dob DESC
LIMIT 1;
8) Which institute has MOST NUMBER of students?
SELECT splace AS Institute, COUNT(*) AS Student_Count
FROM Studies
GROUP BY splace
ORDER BY Student_Count DESC
LIMIT 1;
9) Who is the above programmer?
SELECT name
FROM Programmer
WHERE prof1 = (
SELECT prof1
FROM Programmer
WHERE prof1 = &#39;DBASE&#39; OR prof2 = &#39;DBASE&#39;
ORDER BY dob DESC
LIMIT 1
);
10) Which female programmer earns MORE than 3000/- but DOES NOT know C, C++, Oracle or Dbase?
SELECT name
FROM Programmer
WHERE sex = &#39;f&#39; AND salary &gt; 3000
AND prof1 NOT IN (&#39;C&#39;, &#39;C++&#39;, &#39;Oracle&#39;, &#39;DBASE&#39;)
AND prof2 NOT IN (&#39;C&#39;, &#39;C++&#39;, &#39;Oracle&#39;, &#39;DBASE&#39;);
11) Which is the COSTLIEST course?
SELECT course
FROM Studies
ORDER BY ccost DESC

LIMIT 1;
12) Which course has been done by MOST of the students?
SELECT course
FROM Studies
GROUP BY course
ORDER BY COUNT(*) DESC
LIMIT 1;
13) Display name of the institute and course Which has below AVERAGE course fee?
SELECT splace AS Institute, course
FROM Studies
WHERE ccost &lt; (SELECT AVG(ccost) FROM Studies);
14) Which institute conducts COSTLIEST course?
SELECT splace AS Institute
FROM Studies
ORDER BY ccost DESC
LIMIT 1;
15) Which course has below AVERAGE number of students?
SELECT course
FROM Studies
GROUP BY course
HAVING COUNT(*) &lt; (SELECT AVG(COUNT(*)) FROM Studies GROUP BY course);
16) Which institute conducts the above course?
SELECT splace AS Institute
FROM Studies
GROUP BY splace
HAVING COUNT(*) &lt; (SELECT AVG(COUNT(*)) FROM Studies GROUP BY course);
17) Display names of the course WHOSE fees are within 1000(+ or -) of the AVERAGE fee.
SELECT course
FROM Studies
WHERE ccost BETWEEN (SELECT AVG(ccost) - 1000 FROM Studies) AND (SELECT AVG(ccost) + 1000 FROM
Studies);
18) Which package has the HIGEST development cost?
SELECT title
FROM Software
ORDER BY dcost DESC
LIMIT 1;
19) Which package has the LOWEST selling cost?
SELECT title
FROM Software
ORDER BY scost ASC
LIMIT 1;
20) Who developed the package, which has sold the LEAST number of copies?
SELECT name
FROM Software
WHERE sold = (SELECT MIN(sold) FROM Software)
LIMIT 1;

21) Which language was used to develop the package WHICH has the HIGEST sales amount?
SELECT dev_in AS Language
FROM Software
WHERE scost = (SELECT MAX(scost) FROM Software)
LIMIT 1;
22) How many copies of the package that has the LEAST DIFFRENCE between development and selling cost
were sold?
SELECT sold
FROM Software
ORDER BY ABS(scost - dcost)
LIMIT 1;
23) Which is the COSTLIEAST package developed in PASCAL?
SELECT title
FROM Software
WHERE dev_in = &#39;PASCAL&#39;
ORDER BY scost DESC
LIMIT 1;
24) Which language was used to develop the MOST NUMBER of package?
SELECT dev_in AS Language
FROM Software
GROUP BY dev_in
ORDER BY COUNT(*) DESC
LIMIT 1;
25) Which programmer has developed the HIGEST NUMBER of package?
SELECT name
FROM Software
GROUP BY name
ORDER BY COUNT(*) DESC
LIMIT 1;
26) Who is the author of the COSTLIEST package?
SELECT name
FROM Software
WHERE scost = (SELECT MAX(scost) FROM Software)
LIMIT 1;
27) Display names of packages WHICH have been sold LESS THAN the AVERAGE number of copies?
SELECT title
FROM Software
WHERE sold &lt; (SELECT AVG(sold) FROM Software);
28) Who are the female programmers earning MORE than the HIGEST paid male programmers?
SELECT name
FROM Programmer
WHERE sex = &#39;f&#39; AND salary &gt; (SELECT MAX(salary) FROM Programmer WHERE sex = &#39;m&#39;);
29) Which language has been stated as prof1 by MOST of the programmers?
SELECT prof1 AS Language
FROM Programmer
GROUP BY prof1
ORDER BY COUNT(*) DESC
LIMIT 1;

30) Who are the authors of packages, WHICH have recovered MORE THAN double the development cost?
SELECT name
FROM Software
GROUP BY name
HAVING SUM(scost) &gt; (2 * SUM(dcost));
31) Display programmer names and CHEAPEST package developed by them in EACH language?
SELECT s.name AS Programmer_Name, s.title AS Cheapest_Package, s.dev_in AS Language
FROM Software s
JOIN (
SELECT name, dev_in, MIN(scost) AS Min_Selling_Cost
FROM Software
GROUP BY name, dev_in
) AS min_cost ON s.name = min_cost.name AND s.dev_in = min_cost.dev_in AND s.scost =
min_cost.Min_Selling_Cost;
32) Who is the YOUNGEST male programmer born in 1965?
SELECT name
FROM Programmer
WHERE sex = &#39;m&#39; AND YEAR(dob) = 1965
ORDER BY dob ASC
LIMIT 1;
33) Display language used by EACH programmer to develop the HIGHEST selling and LOWEST selling
package.
SELECT name,
(SELECT dev_in FROM Software WHERE name = p.name AND scost = MAX(scost)) AS
Highest_Selling_Language,
(SELECT dev_in FROM Software WHERE name = p.name AND scost = MIN(scost)) AS
Lowest_Selling_Language
FROM Programmer p;
34) Who is the OLDEST female programmer WHO joined in 1992
SELECT name
FROM Programmer
WHERE sex = &#39;f&#39; AND YEAR(doj) = 1992
ORDER BY dob ASC
LIMIT 1;
35) In WHICH year where the MOST NUMBER of programmer born?
SELECT YEAR(dob) AS Birth_Year, COUNT(*) AS Programmer_Count
FROM Programmer
GROUP BY YEAR(dob)
ORDER BY Programmer_Count DESC
LIMIT 1;
36) In WHICH month did MOST NUMBRER of programmer join?
SELECT MONTH(doj) AS Join_Month, COUNT(*) AS Programmer_Count
FROM Programmer
GROUP BY MONTH(doj)
ORDER BY Programmer_Count DESC
LIMIT 1;
37) In WHICH language are MOST of the programmer&#39;s proficient?
SELECT prof1 AS Language, COUNT(*) AS Programmer_Count

FROM Programmer
GROUP BY prof1
UNION ALL
SELECT prof2 AS Language, COUNT(*) AS Programmer_Count
FROM Programmer
GROUP BY prof2
ORDER BY Programmer_Count DESC
LIMIT 1;
38) Who are the male programmers earning BELOW the AVERAGE salary of female programmers?
SELECT name
FROM Programmer
WHERE sex = &#39;m&#39; AND salary &lt; (SELECT AVG(salary) FROM Programmer WHERE sex = &#39;f&#39;);
QUERY - IV
1) Display the details of THOSE WHO are drawing the same salary.
SELECT *
FROM Programmer
WHERE salary IN (
SELECT salary
FROM Programmer
GROUP BY salary
HAVING COUNT(*) &gt; 1
);
2) Display the details of software developed by male programmers earning MORE than 3000.
SELECT *
FROM Software
WHERE name IN (
SELECT name
FROM Programmer
WHERE sex = &#39;m&#39; AND salary &gt; 3000
);
3) Display details of packages developed in PASCAL by female programmers.
SELECT *
FROM Software
WHERE dev_in = &#39;PASCAL&#39; AND name IN (
SELECT name
FROM Programmer
WHERE sex = &#39;f&#39;
);
4) Display the details of the programmer WHO joined BEFORE 1990.
SELECT *
FROM Programmer
WHERE doj &lt; &#39;1990-01-01&#39;;
5) Display details of software developed in C by female programmers of PRAGATHI.
SELECT *
FROM Software
WHERE dev_in = &#39;C&#39; AND name IN (
SELECT name
FROM Programmer
WHERE sex = &#39;f&#39; AND splace = &#39;PRAGATHI&#39;
);

6) Display NUMBER of packages NUMBER of copies sold and sales value of EACH programmer Institute-
wise.
SELECT p.name AS Programmer_Name, p.splace AS Institute, COUNT(s.title) AS Packages_Developed,
SUM(s.sold) AS Total_Copies_Sold, SUM(s.sold * s.scost) AS Total_Sales_Value
FROM Programmer p
LEFT JOIN Software s ON p.name = s.name
GROUP BY p.name, p.splace;
7) Display details of software developed in DBASE by male programmers WHO belong to the institute on
which MOST NUMBER OF programmer’s studies.
SELECT *
FROM Software
WHERE dev_in = &#39;DBASE&#39; AND name IN (
SELECT name
FROM Programmer
WHERE sex = &#39;m&#39; AND splace = (
SELECT splace
FROM Programmer
GROUP BY splace
ORDER BY COUNT(*) DESC
LIMIT 1
)
);
8) Display the details of the software that was developed by male programmers born BEFORE 1965 and
female programmers born AFTER 1975.
SELECT *
FROM Software
WHERE name IN (
SELECT name
FROM Programmer
WHERE (sex = &#39;m&#39; AND YEAR(dob) &lt; 1965)
OR (sex = &#39;f&#39; AND YEAR(dob) &gt; 1975)
);
9) Display the details of the software that was developed in the language that is NOT the programmer’s first
proficiency.
SELECT *
FROM Software
WHERE dev_in NOT IN (
SELECT prof1
FROM Programmer
UNION
SELECT prof2
FROM Programmer
);
10) Display details of software that was developed in the language which is NEITHER first NOR second
proficiency of the programmer.
SELECT *
FROM Software
WHERE dev_in NOT IN (
SELECT prof1
FROM Programmer
UNION
SELECT prof2

FROM Programmer
);
11) Display details of software developed by male students of SABHARI.
SELECT *
FROM Software
WHERE name IN (
SELECT name
FROM Programmer
WHERE sex = &#39;m&#39; AND splace = &#39;SABHARI&#39;
);
12) Display the names of programmers WHO HAVE NOT developed any package.
SELECT name
FROM Programmer
WHERE name NOT IN (
SELECT DISTINCT name
FROM Software
);
13) What is the total cost of the software developed by the programmers by APPLE?
SELECT SUM(scost) AS Total_Cost
FROM Software
WHERE name IN (
SELECT name
FROM Programmer
WHERE splace = &#39;APPLE&#39;
);
14) Who are the programmers WHO JOINED in the same day?
SELECT name
FROM Programmer
GROUP BY name
HAVING COUNT(DISTINCT doj) = 1;
15) Who are the programmers WHO HAVE THE SAME PROF2?
SELECT name
FROM Programmer
GROUP BY name
HAVING COUNT(DISTINCT prof2) = 1;
16) Display the total sales values of software, institutes-wise.
SELECT p.splace AS Institute, SUM(s.sold * s.scost) AS Total_Sales_Value
FROM Programmer p
LEFT JOIN Software s ON p.name = s.name
GROUP BY p.splace;
17) In which institutes did the person who developed the COSTLIEST package study?
SELECT splace AS Institute
FROM Programmer
WHERE name IN (
SELECT name
FROM Software
WHERE scost = (SELECT MAX(scost) FROM Software)
);
18) Which language listed in prof1 and prof2 HAS NOT BEEN used to develop any package?

SELECT DISTINCT language
FROM (
SELECT prof1 AS language FROM Programmer
UNION
SELECT prof2 AS language FROM Programmer
) AS languages
WHERE language NOT IN (
SELECT dev_in FROM Software
);
19) How much does the person WHO developed the HIGHEST selling package earn and WHAT course did
he/she undergo?
SELECT p.name, p.salary, s.title, s.sold, s.scost, s.dcost, s.dev_in
FROM Programmer p
JOIN Software s ON p.name = s.name
WHERE s.sold = (SELECT MAX(sold) FROM Software);
20) How many months will it take for each programmer to recover the cost of the course underwent?
SELECT p.name, s.title, ROUND(s.scost / (p.salary / 12), 2) AS Months_To_Recover
FROM Programmer p
JOIN Software s ON p.name = s.name;
21) Which is the COSTLIEST package developed by a person with under 3 year’s experience?
SELECT *
FROM Software
WHERE name IN (
SELECT name
FROM Programmer
WHERE DATE_PART(&#39;year&#39;, CURRENT_DATE) - DATE_PART(&#39;year&#39;, doj) &lt; 3
)
ORDER BY scost DESC
LIMIT 1;
22) What is the AVERAGE salary for those WHOSE software&#39;s sales value is more than 50,000?
SELECT AVG(p.salary) AS Average_Salary
FROM Programmer p
JOIN Software s ON p.name = s.name
GROUP BY p.salary
HAVING SUM(s.sold * s.scost) &gt; 50000;
23) How many packages were developed by the students WHO studied in the institute that Charge the
LOWEST course fee?
SELECT COUNT(*) AS Package_Count
FROM Software
WHERE name IN (
SELECT name
FROM Programmer
WHERE splace = (
SELECT splace
FROM Studies
ORDER BY ccost ASC
LIMIT 1
)
);
24) How many packages were developed by the person WHO developed the CHEAPEST package? Where
did he\she study?

SELECT COUNT(*) AS Package_Count, p.splace AS Institute
FROM Software s
JOIN Programmer p ON s.name = p.name
WHERE scost = (
SELECT MIN(scost)
FROM Software
)
GROUP BY p.splace;
25) How many packages were developed by female programmers earning MORE than the HIGHEST paid
male programmer?
SELECT COUNT(*) AS Package_Count
FROM Software
WHERE name IN (
SELECT name
FROM Programmer
WHERE sex = &#39;f&#39; AND salary &gt; (
SELECT MAX(salary)
FROM Programmer
WHERE sex = &#39;m&#39;
)
);
26) How many packages were developed by the MOST experienced programmers from BDPS?
SELECT COUNT(*) AS Package_Count
FROM Software
WHERE name IN (
SELECT name
FROM Programmer
WHERE splace = &#39;BDPS&#39;
ORDER BY doj DESC
LIMIT 1
);
27) List the programmers (from software table) and institutes they studied, including those WHO DIDN&#39;T
develop any package.
SELECT p.name, p.splace AS Institute
FROM Programmer p
LEFT JOIN Software s ON p.name = s.name;
28) List each profit with the number of programmers having that prof1 and the number of packages
developed in that prof1.
SELECT prof1 AS Language, COUNT(DISTINCT name) AS Programmer_Count, COUNT(title) AS
Package_Count
FROM Programmer p
LEFT JOIN Software s ON p.name = s.name
GROUP BY prof1;
29) List programmer names (from programmer table) and number of packages EACH developed.
SELECT p.name, COUNT(s.title) AS Package_Count
FROM Programmer p
LEFT JOIN Software s ON p.name = s.name
GROUP BY p.name;
30) List all the details of programmers.
SELECT *
FROM Programmer;